{"ast":null,"code":"var _jsxFileName = \"/Users/t.b.araujouva.nl/Documents/GitHub/port-pilotUvA-02/src/framework/visualisation/react/ui/prompts/consent_form.tsx\",\n    _s = $RefreshSig$();\n\nimport { assert } from '../../../../helpers';\nimport { Table } from '../elements/table';\nimport { LabelButton, PrimaryButton } from '../elements/button';\nimport { BodyLarge, Title4 } from '../elements/text';\nimport TextBundle from '../../../../text_bundle';\nimport { Translator } from '../../../../translator';\nimport React from 'react';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ConsentForm = props => {\n  _s();\n\n  const tablesIn = React.useRef(parseTables(props.tables));\n  const metaTables = React.useRef(parseTables(props.metaTables));\n  const tablesOut = React.useRef(tablesIn.current);\n  const {\n    locale,\n    resolve\n  } = props;\n  const {\n    description,\n    donateQuestion,\n    donateButton,\n    cancelButton\n  } = prepareCopy(props);\n\n  function rowCell(dataFrame, column, row) {\n    const text = String(dataFrame[column][`${row}`]);\n    return {\n      __type__: 'PropsUITableCell',\n      text: text\n    };\n  }\n\n  function headCell(dataFrame, column) {\n    return {\n      __type__: 'PropsUITableCell',\n      text: column\n    };\n  }\n\n  function columnNames(dataFrame) {\n    return Object.keys(dataFrame);\n  }\n\n  function columnCount(dataFrame) {\n    return columnNames(dataFrame).length;\n  }\n\n  function rowCount(dataFrame) {\n    if (columnCount(dataFrame) === 0) {\n      return 0;\n    } else {\n      const firstColumn = dataFrame[columnNames(dataFrame)[0]];\n      return Object.keys(firstColumn).length - 1;\n    }\n  }\n\n  function rows(data) {\n    const result = [];\n\n    for (let row = 0; row <= rowCount(data); row++) {\n      const id = `${row}`;\n      const cells = columnNames(data).map(column => rowCell(data, column, row));\n      result.push({\n        __type__: 'PropsUITableRow',\n        id,\n        cells\n      });\n    }\n\n    return result;\n  }\n\n  function parseTables(tablesData) {\n    console.log('parseTables');\n    return tablesData.map(table => parseTable(table));\n  }\n\n  function parseTable(tableData) {\n    const id = tableData.id;\n    const title = Translator.translate(tableData.title, props.locale);\n    const deletedRowCount = 0;\n    const dataFrame = JSON.parse(tableData.data_frame);\n    const headCells = columnNames(dataFrame).map(column => headCell(dataFrame, column));\n    const head = {\n      __type__: 'PropsUITableHead',\n      cells: headCells\n    };\n    const body = {\n      __type__: 'PropsUITableBody',\n      rows: rows(dataFrame)\n    };\n    return {\n      __type__: 'PropsUITable',\n      id,\n      head,\n      body,\n      title,\n      deletedRowCount\n    };\n  }\n\n  function renderTable(table) {\n    let readOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col gap-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Title4, {\n        text: table.title,\n        margin: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, { ...table,\n        readOnly: readOnly,\n        locale: locale,\n        onChange: handleTableChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, table.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n  function handleTableChange(id, rows) {\n    const tablesCopy = tablesOut.current.slice(0);\n    const index = tablesCopy.findIndex(table => table.id === id);\n\n    if (index > -1) {\n      const {\n        title,\n        head,\n        body: oldBody,\n        deletedRowCount: oldDeletedRowCount\n      } = tablesCopy[index];\n      const body = {\n        __type__: 'PropsUITableBody',\n        rows\n      };\n      const deletedRowCount = oldDeletedRowCount + (oldBody.rows.length - rows.length);\n      tablesCopy[index] = {\n        __type__: 'PropsUITable',\n        id,\n        head,\n        body,\n        title,\n        deletedRowCount\n      };\n    }\n\n    tablesOut.current = tablesCopy;\n  }\n\n  function handleDonate() {\n    const value = serializeConsentData();\n    resolve === null || resolve === void 0 ? void 0 : resolve({\n      __type__: 'PayloadJSON',\n      value\n    });\n  }\n\n  function handleCancel() {\n    resolve === null || resolve === void 0 ? void 0 : resolve({\n      __type__: 'PayloadFalse',\n      value: false\n    });\n  }\n\n  function serializeConsentData() {\n    const array = serializeTables().concat(serializeMetaData());\n    return JSON.stringify(array);\n  }\n\n  function serializeMetaData() {\n    return serializeMetaTables().concat(serializeDeletedMetaData());\n  }\n\n  function serializeTables() {\n    return tablesOut.current.map(table => serializeTable(table));\n  }\n\n  function serializeMetaTables() {\n    return metaTables.current.map(table => serializeTable(table));\n  }\n\n  function serializeDeletedMetaData() {\n    const rawData = tablesOut.current.filter(_ref => {\n      let {\n        deletedRowCount\n      } = _ref;\n      return deletedRowCount > 0;\n    }).map(_ref2 => {\n      let {\n        id,\n        deletedRowCount\n      } = _ref2;\n      return `User deleted ${deletedRowCount} rows from table: ${id}`;\n    });\n    const data = JSON.stringify(rawData);\n    return {\n      user_omissions: data\n    };\n  }\n\n  function serializeTable(_ref3) {\n    let {\n      id,\n      head,\n      body: {\n        rows\n      }\n    } = _ref3;\n    const data = rows.map(row => serializeRow(row, head));\n    return {\n      [id]: data\n    };\n  }\n\n  function serializeRow(row, head) {\n    assert(row.cells.length === head.cells.length, `Number of cells in row (${row.cells.length}) should be equals to number of cells in head (${head.cells.length})`);\n    const keys = head.cells.map(cell => cell.text);\n    const values = row.cells.map(cell => cell.text);\n    return _.fromPairs(_.zip(keys, values));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BodyLarge, {\n      text: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col gap-8\",\n      children: [tablesIn.current.map(table => renderTable(table)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(BodyLarge, {\n          margin: \"\",\n          text: donateQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row gap-4 mt-4 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(PrimaryButton, {\n            label: donateButton,\n            onClick: handleDonate,\n            color: \"bg-success text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LabelButton, {\n            label: cancelButton,\n            onClick: handleCancel,\n            color: \"text-grey1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ConsentForm, \"BKg/OWQ1V8tG7gkAJV1LzmeoWlI=\");\n\n_c = ConsentForm;\n\nfunction prepareCopy(_ref4) {\n  let {\n    locale\n  } = _ref4;\n  return {\n    description: Translator.translate(description, locale),\n    donateQuestion: Translator.translate(donateQuestionLabel, locale),\n    donateButton: Translator.translate(donateButtonLabel, locale),\n    cancelButton: Translator.translate(cancelButtonLabel, locale)\n  };\n}\n\nconst donateQuestionLabel = new TextBundle().add('en', 'Do you want to donate the above data?').add('nl', 'Wilt u de bovenstaande gegevens doneren?');\nconst donateButtonLabel = new TextBundle().add('en', 'Yes, donate').add('nl', 'Ja, doneer');\nconst cancelButtonLabel = new TextBundle().add('en', 'No').add('nl', 'Nee');\nconst description = new TextBundle().add('en', 'Please review the data below and confirm whether you would like to donate it. Carefully check the data and adjust when required. The research project is only interested in organizations. Therefore, we recommend you to: (1) Click on adjust; (2) Select all content that is not related to organizations (e.g., companies, public institutions, governments etc.); (3) Click on delete. By doing this, you are removing content from others who may not be relevant for this study. Your donation will help us understand [PLACEHOLDER]. Thank you in advance!').add('nl', 'Bepaal of u de onderstaande gegevens wilt doneren. Bekijk de gegevens zorgvuldig en pas zo nodig aan. Met uw donatie draagt u bij aan het eerder beschreven onderzoek. Alvast hartelijk dank.');\n\nvar _c;\n\n$RefreshReg$(_c, \"ConsentForm\");","map":{"version":3,"names":["assert","Table","LabelButton","PrimaryButton","BodyLarge","Title4","TextBundle","Translator","React","_","ConsentForm","props","tablesIn","useRef","parseTables","tables","metaTables","tablesOut","current","locale","resolve","description","donateQuestion","donateButton","cancelButton","prepareCopy","rowCell","dataFrame","column","row","text","String","__type__","headCell","columnNames","Object","keys","columnCount","length","rowCount","firstColumn","rows","data","result","id","cells","map","push","tablesData","console","log","table","parseTable","tableData","title","translate","deletedRowCount","JSON","parse","data_frame","headCells","head","body","renderTable","readOnly","handleTableChange","tablesCopy","slice","index","findIndex","oldBody","oldDeletedRowCount","handleDonate","value","serializeConsentData","handleCancel","array","serializeTables","concat","serializeMetaData","stringify","serializeMetaTables","serializeDeletedMetaData","serializeTable","rawData","filter","user_omissions","serializeRow","cell","values","fromPairs","zip","donateQuestionLabel","donateButtonLabel","cancelButtonLabel","add"],"sources":["/Users/t.b.araujouva.nl/Documents/GitHub/port-pilotUvA-02/src/framework/visualisation/react/ui/prompts/consent_form.tsx"],"sourcesContent":["import { assert, Weak } from '../../../../helpers'\nimport { PropsUITable, PropsUITableBody, PropsUITableCell, PropsUITableHead, PropsUITableRow } from '../../../../types/elements'\nimport { PropsUIPromptConsentForm, PropsUIPromptConsentFormTable } from '../../../../types/prompts'\nimport { Table } from '../elements/table'\nimport { LabelButton, PrimaryButton } from '../elements/button'\nimport { BodyLarge, Title4 } from '../elements/text'\nimport TextBundle from '../../../../text_bundle'\nimport { Translator } from '../../../../translator'\nimport { ReactFactoryContext } from '../../factory'\nimport React from 'react'\nimport _ from 'lodash'\n\ntype Props = Weak<PropsUIPromptConsentForm> & ReactFactoryContext\n\ninterface TableContext {\n  title: string\n  deletedRowCount: number\n}\n\nexport const ConsentForm = (props: Props): JSX.Element => {\n  const tablesIn = React.useRef<Array<PropsUITable & TableContext>>(parseTables(props.tables))\n  const metaTables = React.useRef<Array<PropsUITable & TableContext>>(parseTables(props.metaTables))\n  const tablesOut = React.useRef<Array<PropsUITable & TableContext>>(tablesIn.current)\n\n  const { locale, resolve } = props\n  const { description, donateQuestion, donateButton, cancelButton } = prepareCopy(props)\n\n  function rowCell (dataFrame: any, column: string, row: number): PropsUITableCell {\n    const text = String(dataFrame[column][`${row}`])\n    return { __type__: 'PropsUITableCell', text: text }\n  }\n\n  function headCell (dataFrame: any, column: string): PropsUITableCell {\n    return { __type__: 'PropsUITableCell', text: column }\n  }\n\n  function columnNames (dataFrame: any): string[] {\n    return Object.keys(dataFrame)\n  }\n\n  function columnCount (dataFrame: any): number {\n    return columnNames(dataFrame).length\n  }\n\n  function rowCount (dataFrame: any): number {\n    if (columnCount(dataFrame) === 0) {\n      return 0\n    } else {\n      const firstColumn = dataFrame[columnNames(dataFrame)[0]]\n      return Object.keys(firstColumn).length - 1\n    }\n  }\n\n  function rows (data: any): PropsUITableRow[] {\n    const result: PropsUITableRow[] = []\n    for (let row = 0; row <= rowCount(data); row++) {\n      const id = `${row}`\n      const cells = columnNames(data).map((column: string) => rowCell(data, column, row))\n      result.push({ __type__: 'PropsUITableRow', id, cells })\n    }\n    return result\n  }\n\n  function parseTables (tablesData: PropsUIPromptConsentFormTable[]): Array<PropsUITable & TableContext> {\n    console.log('parseTables')\n    return tablesData.map((table) => parseTable(table))\n  }\n\n  function parseTable (tableData: PropsUIPromptConsentFormTable): (PropsUITable & TableContext) {\n    const id = tableData.id\n    const title = Translator.translate(tableData.title, props.locale)\n    const deletedRowCount = 0\n    const dataFrame = JSON.parse(tableData.data_frame)\n    const headCells = columnNames(dataFrame).map((column: string) => headCell(dataFrame, column))\n    const head: PropsUITableHead = { __type__: 'PropsUITableHead', cells: headCells }\n    const body: PropsUITableBody = { __type__: 'PropsUITableBody', rows: rows(dataFrame) }\n\n    return { __type__: 'PropsUITable', id, head, body, title, deletedRowCount }\n  }\n\n  function renderTable (table: (Weak<PropsUITable> & TableContext), readOnly = false): JSX.Element {\n    return (\n      <div key={table.id} className='flex flex-col gap-4 mb-4'>\n        <Title4 text={table.title} margin='' />\n        <Table {...table} readOnly={readOnly} locale={locale} onChange={handleTableChange} />\n      </div>\n    )\n  }\n\n  function handleTableChange (id: string, rows: PropsUITableRow[]): void {\n    const tablesCopy = tablesOut.current.slice(0)\n    const index = tablesCopy.findIndex(table => table.id === id)\n    if (index > -1) {\n      const { title, head, body: oldBody, deletedRowCount: oldDeletedRowCount } = tablesCopy[index]\n      const body: PropsUITableBody = { __type__: 'PropsUITableBody', rows }\n      const deletedRowCount = oldDeletedRowCount + (oldBody.rows.length - rows.length)\n      tablesCopy[index] = { __type__: 'PropsUITable', id, head, body, title, deletedRowCount }\n    }\n    tablesOut.current = tablesCopy\n  }\n\n  function handleDonate (): void {\n    const value = serializeConsentData()\n    resolve?.({ __type__: 'PayloadJSON', value })\n  }\n\n  function handleCancel (): void {\n    resolve?.({ __type__: 'PayloadFalse', value: false })\n  }\n\n  function serializeConsentData (): string {\n    const array = serializeTables().concat(serializeMetaData())\n    return JSON.stringify(array)\n  }\n\n  function serializeMetaData (): any[] {\n    return serializeMetaTables().concat(serializeDeletedMetaData())\n  }\n\n  function serializeTables (): any[] {\n    return tablesOut.current.map((table) => serializeTable(table))\n  }\n\n  function serializeMetaTables (): any[] {\n    return metaTables.current.map((table) => serializeTable(table))\n  }\n\n  function serializeDeletedMetaData (): any {\n    const rawData = tablesOut.current\n      .filter(({ deletedRowCount }) => deletedRowCount > 0)\n      .map(({ id, deletedRowCount }) => `User deleted ${deletedRowCount} rows from table: ${id}`)\n\n    const data = JSON.stringify(rawData)\n    return { user_omissions: data }\n  }\n\n  function serializeTable ({ id, head, body: { rows } }: PropsUITable): any {\n    const data = rows.map((row) => serializeRow(row, head))\n    return { [id]: data }\n  }\n\n  function serializeRow (row: PropsUITableRow, head: PropsUITableHead): any {\n    assert(row.cells.length === head.cells.length, `Number of cells in row (${row.cells.length}) should be equals to number of cells in head (${head.cells.length})`)\n    const keys = head.cells.map((cell) => cell.text)\n    const values = row.cells.map((cell) => cell.text)\n    return _.fromPairs(_.zip(keys, values))\n  }\n\n  return (\n    <>\n      <BodyLarge text={description} />\n      <div className='flex flex-col gap-8'>\n        {tablesIn.current.map((table) => renderTable(table))}\n        <div>\n          <BodyLarge margin='' text={donateQuestion} />\n          <div className='flex flex-row gap-4 mt-4 mb-4'>\n            <PrimaryButton label={donateButton} onClick={handleDonate} color='bg-success text-white' />\n            <LabelButton label={cancelButton} onClick={handleCancel} color='text-grey1' />\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\ninterface Copy {\n  description: string\n  donateQuestion: string\n  donateButton: string\n  cancelButton: string\n}\n\nfunction prepareCopy ({ locale }: Props): Copy {\n  return {\n    description: Translator.translate(description, locale),\n    donateQuestion: Translator.translate(donateQuestionLabel, locale),\n    donateButton: Translator.translate(donateButtonLabel, locale),\n    cancelButton: Translator.translate(cancelButtonLabel, locale)\n  }\n}\n\nconst donateQuestionLabel = new TextBundle()\n  .add('en', 'Do you want to donate the above data?')\n  .add('nl', 'Wilt u de bovenstaande gegevens doneren?')\n\nconst donateButtonLabel = new TextBundle()\n  .add('en', 'Yes, donate')\n  .add('nl', 'Ja, doneer')\n\nconst cancelButtonLabel = new TextBundle()\n  .add('en', 'No')\n  .add('nl', 'Nee')\n\nconst description = new TextBundle()\n  .add('en', 'Please review the data below and confirm whether you would like to donate it. Carefully check the data and adjust when required. The research project is only interested in organizations. Therefore, we recommend you to: (1) Click on adjust; (2) Select all content that is not related to organizations (e.g., companies, public institutions, governments etc.); (3) Click on delete. By doing this, you are removing content from others who may not be relevant for this study. Your donation will help us understand [PLACEHOLDER]. Thank you in advance!')\n  .add('nl', 'Bepaal of u de onderstaande gegevens wilt doneren. Bekijk de gegevens zorgvuldig en pas zo nodig aan. Met uw donatie draagt u bij aan het eerder beschreven onderzoek. Alvast hartelijk dank.')\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}